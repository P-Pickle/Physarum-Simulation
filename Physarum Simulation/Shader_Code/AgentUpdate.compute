#version 460 core
layout(local_size_x = 1, local_size_y = 1,local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D TrailMap;

struct Agent
{
    vec2 Pos;
    vec2 Dir;
}

layout(std460, binding = 1) buffer AgentStorage {
    Agent Agents[];
};

uniform int width;
uniform int height;
uniform int AgentCount

void Update();
void Disperse();

void main()
{
    vec4 value = vec4(0.0, 0.0, 0.0, 1.0);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	
    value.x = float(texelCoord.x)/(gl_NumWorkGroups.x);
    value.y = float(texelCoord.y)/(gl_NumWorkGroups.y);
	
    imageStore(TrailMap, texelCoord, value);
    
}


void Update()
{
    
    vec4 Pixel = vec4(1.0,1.0,1.0,1.0);

    //retreives the width and heigth of the TrailMap
    //vec2 TexSize = texturesize(TrailMap,0);
    //int width = TexSize.x;
    //int height = TexSize.y; 

    //calculate new position
    Agent CurrAgent = Agents[gl_GlobalInvocationID.x];
    vec2 Direction = CurrAgent.Dir;    
    vec2 NewPos = CurrAgent.Pos + Direction;
    
    //if the agent tries to go out of bounds don't let it
    if(NewPos.x >= width || NewPos.y >= height || NewPos.x <= 0 || NewPos.y <= 0)
    {
        Direction = vec2(Direction.xy) * vec2(-1,-1);
        NewPos.x = min(width - 0.01, max(0,NewPos.x)); 
        NewPos.y = min(height - 0.01, max(0,NewPos.y));    
    }
    
    //despoits Trail at new location
    Agents[gl_GlobalInvocationID.x].Pos = NewPos;
    Agents[gl_GlobalInvocationID.x].Dir = Direction;
    imageStore(TrailMap, NewPos, Pixel);
    

}

void Test()
{

}